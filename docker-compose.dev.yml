services:

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - dokploy-network

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: api
    expose:
      - 3000
    depends_on:
      - backend-api
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000
      - traefik.http.routers.frontend.priority=1

  backend-api:
    build: ./backend-api
    expose:
      - 3001
    environment:
      - DB_SERVICE_HOST=backend-db
      - DB_SERVICE_PORT=3002
      - OTEL_SERVICE_NAME=backend-api
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    depends_on:
      - backend-db
      - otel-collector
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend-api.entrypoints=web
      - traefik.http.routers.backend-api.rule=PathPrefix(`/api`)
      - traefik.http.services.backend-api.loadbalancer.server.port=3001
      - traefik.http.middlewares.backend-api-strip.stripprefix.prefixes=/api
      - traefik.http.routers.backend-api.middlewares=backend-api-strip

  backend-db:
    build: ./backend-db
    expose:
      - 3002
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/demo
      - OTEL_SERVICE_NAME=backend-db
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    depends_on:
      - mongodb
      - otel-collector
    networks:
      - dokploy-network

  mongodb:
    image: mongo:latest
    expose:
      - 27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - dokploy-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    expose:
      - 4318 # OTLP HTTP
      - 4317 # OTLP gRPC
    depends_on:
      - tempo
    networks:
      - dokploy-network

  tempo:
    image: grafana/tempo:latest
    user: root
    command: ["-config.file=/etc/tempo.yaml"] 
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - tempo_data:/var/tempo/data
    expose:
      - 3200 # Tempo HTTP
      - 4317 # Tempo OTLP gRPC
    networks:
      - dokploy-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_SERVER_HTTP_PORT=8080
      - GF_SERVER_ROOT_URL=/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    expose:
      - 8080
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=web
      - traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)
      - traefik.http.services.grafana.loadbalancer.server.port=8080

networks:
  dokploy-network:
    external: true 

volumes:
  mongodb_data:
  grafana_data:
  tempo_data:
